{"ast":null,"code":"var _jsxFileName = \"/home/pavan/kanban-board/src/components/KanbanBoard.js\";\nimport React from \"react\";\nimport TicketCard from \"./TicketCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  tickets,\n  users,\n  groupBy,\n  sortBy\n}) => {\n  const groupTickets = () => {\n    if (groupBy === \"status\") {\n      return tickets.reduce((groups, ticket) => {\n        const group = ticket.status || \"No Status\";\n        groups[group] = groups[group] || [];\n        groups[group].push(ticket);\n        return groups;\n      }, {});\n    }\n    if (groupBy === \"user\") {\n      return tickets.reduce((groups, ticket) => {\n        const user = users.find(user => user.id === ticket.userId);\n        const group = user ? user.name : \"Unassigned\";\n        groups[group] = groups[group] || [];\n        groups[group].push(ticket);\n        return groups;\n      }, {});\n    }\n    if (groupBy === \"priority\") {\n      return tickets.reduce((groups, ticket) => {\n        const priority = ticket.priority || \"No Priority\";\n        groups[priority] = groups[priority] || [];\n        groups[priority].push(ticket);\n        return groups;\n      }, {});\n    }\n    return {};\n  };\n  const sortTickets = group => {\n    return group.sort((a, b) => {\n      if (sortBy === \"priority\") {\n        return b.priority - a.priority;\n      }\n      if (sortBy === \"title\") {\n        return a.title.localeCompare(b.title);\n      }\n      return 0;\n    });\n  };\n  const groupedTickets = groupTickets();\n  const getColumnIcon = group => {\n    const icons = {\n      Backlog: \"/icons_FEtask/Backlog.svg\",\n      \"In Progress\": \"/icons_FEtask/in-progress.svg\",\n      Done: \"/icons_FEtask/Done.svg\",\n      Cancelled: \"/icons_FEtask/Cancelled.svg\",\n      default: \"/icons_FEtask/No-priority.svg\"\n    };\n    return icons[group] || icons.default;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.keys(groupedTickets).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getColumnIcon(group),\n          alt: `${group} icon`,\n          className: \"column-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), sortTickets(groupedTickets[group]).map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n        ticket: ticket\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","TicketCard","jsxDEV","_jsxDEV","KanbanBoard","tickets","users","groupBy","sortBy","groupTickets","reduce","groups","ticket","group","status","push","user","find","id","userId","name","priority","sortTickets","sort","a","b","title","localeCompare","groupedTickets","getColumnIcon","icons","Backlog","Done","Cancelled","default","className","children","Object","keys","map","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pavan/kanban-board/src/components/KanbanBoard.js"],"sourcesContent":["import React from \"react\";\nimport TicketCard from \"./TicketCard\";\n\nconst KanbanBoard = ({ tickets, users, groupBy, sortBy }) => {\n  const groupTickets = () => {\n    if (groupBy === \"status\") {\n      return tickets.reduce((groups, ticket) => {\n        const group = ticket.status || \"No Status\";\n        groups[group] = groups[group] || [];\n        groups[group].push(ticket);\n        return groups;\n      }, {});\n    }\n\n    if (groupBy === \"user\") {\n      return tickets.reduce((groups, ticket) => {\n        const user = users.find((user) => user.id === ticket.userId);\n        const group = user ? user.name : \"Unassigned\";\n        groups[group] = groups[group] || [];\n        groups[group].push(ticket);\n        return groups;\n      }, {});\n    }\n\n    if (groupBy === \"priority\") {\n      return tickets.reduce((groups, ticket) => {\n        const priority = ticket.priority || \"No Priority\";\n        groups[priority] = groups[priority] || [];\n        groups[priority].push(ticket);\n        return groups;\n      }, {});\n    }\n\n    return {};\n  };\n\n  const sortTickets = (group) => {\n    return group.sort((a, b) => {\n      if (sortBy === \"priority\") {\n        return b.priority - a.priority;\n      }\n      if (sortBy === \"title\") {\n        return a.title.localeCompare(b.title);\n      }\n      return 0;\n    });\n  };\n\n  const groupedTickets = groupTickets();\n\n  const getColumnIcon = (group) => {\n    const icons = {\n      Backlog: \"/icons_FEtask/Backlog.svg\",\n      \"In Progress\": \"/icons_FEtask/in-progress.svg\",\n      Done: \"/icons_FEtask/Done.svg\",\n      Cancelled: \"/icons_FEtask/Cancelled.svg\",\n      default: \"/icons_FEtask/No-priority.svg\",\n    };\n    return icons[group] || icons.default;\n  };\n\n  return (\n    <div className=\"kanban-board\">\n      {Object.keys(groupedTickets).map((group) => (\n        <div className=\"kanban-column\" key={group}>\n          <div className=\"kanban-header\">\n            <img src={getColumnIcon(group)} alt={`${group} icon`} className=\"column-icon\" />\n            <h2>{group}</h2>\n          </div>\n          {sortTickets(groupedTickets[group]).map((ticket) => (\n            <TicketCard key={ticket.id} ticket={ticket} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}